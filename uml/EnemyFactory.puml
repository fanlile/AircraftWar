@startuml
class Game {
    # enemyFactory:EnemyFactory
    # enemy:Enemy
}

Game ..> EnemyFactory

abstract class Enemy {

}

interface EnemyFactory {
    + createEnemy():AbstractAircraft
}

class MobEnemy {
    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
}

Enemy <|-- MobEnemy

class MobEnemyFactory {
    + createEnemy():AbstractAircraft
}

EnemyFactory <|.. MobEnemyFactory
MobEnemyFactory ..> MobEnemy

class EliteEnemy {
    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
}

Enemy <|-- EliteEnemy

class EliteEnemyFactory{
    + createEnemy():AbstractAircraft
}

EnemyFactory <|.. EliteEnemyFactory
EliteEnemyFactory ..> EliteEnemy

class BossEnemy {
    + BossEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
}

Enemy <|-- BossEnemy

class BossEnemyFactory {

}

EnemyFactory <|.. BossEnemyFactory
BossEnemyFactory ..> BossEnemy

@enduml